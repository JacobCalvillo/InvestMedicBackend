name: Despliegue en EC2 con Docker

on:
  push:
    branches:
      - main  # Solo cuando se haga un push a la rama 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Construir imagen Docker
        run: docker build -f ./src/Dockerfile -t ${{ secrets.DOCKER_REPO }}:latest .

      - name: Iniciar sesión en Docker Hub (o ECR)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Enviar imagen Docker
        run: docker push ${{ secrets.DOCKER_REPO }}:latest

      - name: Conectar a EC2 y desplegar
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Detener y eliminar contenedor anterior (si existe)
            docker stop ${{ secrets.CONTAINER_NAME }} || true
            docker rm ${{ secrets.CONTAINER_NAME }} || true

            # Pull de la nueva imagen
            docker pull ${{ secrets.DOCKER_REPO }}:latest

            # Ejecutar el nuevo contenedor
            docker run -d -p 80:80 --name ${{ secrets.CONTAINER_NAME }} ${{ secrets.DOCKER_REPO }}:latest
            
            # Opcional: Comandos adicionales después de iniciar el contenedor
            # Por ejemplo, verificar el estado del contenedor:
            docker ps
